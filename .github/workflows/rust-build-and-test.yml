# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and test

on:
  workflow_call:
    inputs:
      debug:
        description: "Whether to build artifacts for normal development and debugging (default: true)"
        type: boolean
        required: false
        default: true
      release:
        description: "Whether to also build artifacts in release mode, with optimizations"
        type: boolean
        required: false
        default: false

permissions:
  # to fetch code (actions/checkout)
  contents: read
  # https://github.com/marketplace/actions/publish-test-results#permissions
  # https://github.com/marketplace/actions/junit-report-action
  checks: write
  pull-requests: write # only required if `comment: true` was enabled

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # https://doc.rust-lang.org/cargo/reference/profiles.html:
        # Cargo has 4 built-in profiles: dev, release, test, and bench
        BUILD_TARGET: [ dev, release ] # refers to a cargo profile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install the Rust toolchain
        # https://github.com/marketplace/actions/rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          # https://rust-lang.github.io/rustup/concepts/profiles.html
          profile: minimal
          toolchain: stable
          # https://rust-lang.github.io/rustup/concepts/components.html
          #components: ...
          override: true

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          #key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Build binaries ("${{ matrix.BUILD_TARGET }}")
        if: ${{ (inputs.debug && (matrix.BUILD_TARGET == 'dev')) || (inputs.release && (matrix.BUILD_TARGET == 'release')) }}
        run: cargo build --profile ${{ matrix.BUILD_TARGET }}
        continue-on-error: false

      - name: Run tests ("${{ matrix.BUILD_TARGET }}")
        if: ${{ (inputs.debug && (matrix.BUILD_TARGET == 'dev')) || (inputs.release && (matrix.BUILD_TARGET == 'release')) }}
        # as suggested by https://github.com/johnterickson/cargo2junit
        run: |
          cargo install cargo2junit
          cargo test --profile ${{ matrix.BUILD_TARGET }} -- -Z unstable-options --format json --report-time | tee test-results-${{ matrix.BUILD_TARGET }}.json
          cat test-results-${{ matrix.BUILD_TARGET }}.json | cargo2junit > test-results-${{ matrix.BUILD_TARGET }}.xml
        env: # See https://github.com/johnterickson/cargo2junit/issues/79
          RUSTC_BOOTSTRAP: 1
        #continue-on-error: false

      - name: Upload Test Results
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (${{ matrix.BUILD_TARGET }})
          path: test-results-${{ matrix.BUILD_TARGET }}.xml

  # as suggested by https://github.com/EnricoMi/publish-unit-test-result-action?tab=readme-ov-file#use-with-matrix-strategy
  publish-test-results:
    name: Publish tests results
    needs: build-and-test
    runs-on: ubuntu-latest
    if: (!cancelled())

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: artifacts/**/test-results-*.xml

      #- name: Publish test report
      #  #https://github.com/marketplace/actions/junit-report-action
      #  uses: mikepenz/action-junit-report@v3
      #  if: success() || failure() # always run even if the previous step fails
      #  with:
      #    report_paths: artifacts/**/test-results-*.xml
      #    detailed_summary: true
      #    include_passed: true
      #    check_name: Test Report
      #    #annotate_notice: true
